#ifndef CPU_H
#define CPU_H

#include <stdint.h>
#include <stdbool.h>

typedef uint32_t DWORD;

typedef struct PermTableStruct {
	char permLevel;
	DWORD start;
	DWORD size;
} PermTable;

typedef struct MW1000Struct {
	// Memory
	unsigned char* memory;
	DWORD memSize;
	DWORD romSize;
	PermTable permTables[8];

	// Registers
	DWORD gpio[16];
	DWORD gpregs[16];
	DWORD pc;
	DWORD sp;
	unsigned char permission;

	// Status Register

    struct
    {
        unsigned int cFlag:1;
	    unsigned int zFlag:1;
	    unsigned int oFlag:1;
	    unsigned int iFlag:1;
        unsigned int dFlag:1;
        unsigned int sFlag:1;
        unsigned int pFlag:1;
    } status;

} MW1000;

void pushInternal(MW1000* cpu, DWORD data);
DWORD popInternal(MW1000* cpu);
bool HasPermission(MW1000* cpu, DWORD addr);
unsigned char ReadMemory(MW1000* cpu, DWORD addr);
void WriteMemory(MW1000* cpu, DWORD addr, unsigned char value);
DWORD FloatToInt(float f);
float IntToFloat(DWORD i);
bool RunInstruction(MW1000* cpu);
MW1000* CreateMW1000(DWORD memSize, DWORD romSize);

#endif
