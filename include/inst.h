#ifndef INST_H
#define INST_H

#include "../include/cpu.h"

void (*instructions[])(MW1000*) = {
	HLT, INTR, RET, IRET, JMP, JPZ, JNZ, JCZ, JNCZ, CALL, CLZ, CNZ, CPC, CNC, STP,	// Control Instructions
	MRC, MRR, MRM, MMR, IN, OUT, STTS, STTL, STTP,									// Memory Instructions
	ADD, SUB, ADDC, SUBB, MUL, DIV, POW, SHL, SHR, ROTL, ROTR, INC, DEC,			// ALU Instructions
	AND, OR, NOT, XOR, XNOR, NAND, NOR, COMP, LESS, MORE,							// Logic Instructions
	FPADD, FPSUB, FPMUL, FPDIV, FPINC, FPDEC, FPNEG,								// FPU Instructions
	FPSIN, FPCOS, FPTAN, FPASIN, FPACOS, FPATAN, SPSQRT, FPLOG, FPPOW,				// Complex FPU Instructions
	CONVIF, CONVFI																	// Conversions
};

// Control Instructions
void HLT(MW1000* cpu);
void INTR(MW1000* cpu);
void RET(MW1000* cpu);
void IRET(MW1000* cpu);
void JMP(MW1000* cpu);
void JPZ(MW1000* cpu);
void JNZ(MW1000* cpu);
void JCZ(MW1000* cpu);
void JNCZ(MW1000* cpu);
void CALL(MW1000* cpu);
void CLZ(MW1000* cpu);
void CNZ(MW1000* cpu);
void CPC(MW1000* cpu);
void CNC(MW1000* cpu);
void STP(MW1000* cpu);

// Memory Instructions
void MRC(MW1000* cpu);
void MRR(MW1000* cpu);
void MRM(MW1000* cpu);
void MMR(MW1000* cpu);
void IN(MW1000* cpu);
void OUT(MW1000* cpu);
void STTS(MW1000* cpu);
void STTL(MW1000* cpu);
void STTP(MW1000* cpu);

// ALU Instructions
void ADD(MW1000* cpu);
void SUB(MW1000* cpu);
void ADDC(MW1000* cpu);
void SUBB(MW1000* cpu);
void MUL(MW1000* cpu);
void DIV(MW1000* cpu);
void POW(MW1000* cpu);
void SHL(MW1000* cpu);
void SHR(MW1000* cpu);
void ROTL(MW1000* cpu);
void ROTR(MW1000* cpu);
void INC(MW1000* cpu);
void DEC(MW1000* cpu);
void AND(MW1000* cpu);
void OR(MW1000* cpu);
void NOT(MW1000* cpu);
void XOR(MW1000* cpu);
void XNOR(MW1000* cpu);
void NAND(MW1000* cpu);
void NOR(MW1000* cpu);
void COMP(MW1000* cpu);
void LESS(MW1000* cpu);
void MORE(MW1000* cpu);

// FPU Instructions
void FPADD(MW1000* cpu);
void FPSUB(MW1000* cpu);
void FPMUL(MW1000* cpu);
void FPDIV(MW1000* cpu);
void FPINC(MW1000* cpu);
void FPDEC(MW1000* cpu);
void FPNEG(MW1000* cpu);
void FPSIN(MW1000* cpu);
void FPCOS(MW1000* cpu);
void FPTAN(MW1000* cpu);
void FPASIN(MW1000* cpu);
void FPACOS(MW1000* cpu);
void FPATAN(MW1000* cpu);
void SPSQRT(MW1000* cpu);
void FPLOG(MW1000* cpu);
void FPPOW(MW1000* cpu);
void CONVIF(MW1000* cpu);
void CONVFI(MW1000* cpu);

#endif