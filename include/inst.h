#ifndef INST_H
#define INST_H

#include "../include/cpu.h"

// Control Instructions
void HLT(MW1000* cpu);
void INTR(MW1000* cpu);
void RET(MW1000* cpu);
void IRET(MW1000* cpu);
void JMP(MW1000* cpu);
void JPZ(MW1000* cpu);
void JNZ(MW1000* cpu);
void JCZ(MW1000* cpu);
void JNCZ(MW1000* cpu);
void CALL(MW1000* cpu);
void CLZ(MW1000* cpu);
void CNZ(MW1000* cpu);
void CPC(MW1000* cpu);
void CNC(MW1000* cpu);
void STP(MW1000* cpu);

// Memory Instructions
void MRC(MW1000* cpu);
void MRR(MW1000* cpu);
void MRM(MW1000* cpu);
void MMR(MW1000* cpu);
void IN(MW1000* cpu);
void OUT(MW1000* cpu);
void STTS(MW1000* cpu);
void STTL(MW1000* cpu);
void STTP(MW1000* cpu);

// ALU Instructions
void ADD(MW1000* cpu);
void SUB(MW1000* cpu);
void ADDC(MW1000* cpu);
void SUBB(MW1000* cpu);
void MUL(MW1000* cpu);
void DIV(MW1000* cpu);
void POW(MW1000* cpu);
void SHL(MW1000* cpu);
void SHR(MW1000* cpu);
void ROTL(MW1000* cpu);
void ROTR(MW1000* cpu);
void INC(MW1000* cpu);
void DEC(MW1000* cpu);
void AND(MW1000* cpu);
void OR(MW1000* cpu);
void NOT(MW1000* cpu);
void XOR(MW1000* cpu);
void XNOR(MW1000* cpu);
void NAND(MW1000* cpu);
void NOR(MW1000* cpu);
void COMP(MW1000* cpu);
void LESS(MW1000* cpu);
void MORE(MW1000* cpu);

#endif