#ifndef INST_H
#define INST_H

#include "../include/cpu.h"

// Control Instructions
bool HLT(MW1000* cpu);
bool INTR(MW1000* cpu);
bool RET(MW1000* cpu);
bool IRET(MW1000* cpu);
bool JMP(MW1000* cpu);
bool JPZ(MW1000* cpu);
bool JNZ(MW1000* cpu);
bool JCZ(MW1000* cpu);
bool JNCZ(MW1000* cpu);
bool CALL(MW1000* cpu);
bool CLZ(MW1000* cpu);
bool CNZ(MW1000* cpu);
bool CPC(MW1000* cpu);
bool CNC(MW1000* cpu);
bool STP(MW1000* cpu);

// Memory Instructions
bool MRC(MW1000* cpu);
bool MRR(MW1000* cpu);
bool MRM(MW1000* cpu);
bool MMR(MW1000* cpu);
bool IN(MW1000* cpu);
bool OUT(MW1000* cpu);
bool STTS(MW1000* cpu);
bool STTL(MW1000* cpu);
bool STTP(MW1000* cpu);

// ALU Instructions
bool ADD(MW1000* cpu);
bool SUB(MW1000* cpu);
bool ADDC(MW1000* cpu);
bool SUBB(MW1000* cpu);
bool MUL(MW1000* cpu);
bool DIV(MW1000* cpu);
bool POW(MW1000* cpu);
bool SHL(MW1000* cpu);
bool SHR(MW1000* cpu);
bool ROTL(MW1000* cpu);
bool ROTR(MW1000* cpu);
bool INC(MW1000* cpu);
bool DEC(MW1000* cpu);
bool AND(MW1000* cpu);
bool OR(MW1000* cpu);
bool NOT(MW1000* cpu);
bool XOR(MW1000* cpu);
bool XNOR(MW1000* cpu);
bool NAND(MW1000* cpu);
bool NOR(MW1000* cpu);
bool COMP(MW1000* cpu);
bool LESS(MW1000* cpu);
bool MORE(MW1000* cpu);

// FPU Instructions
bool FPADD(MW1000* cpu);
bool FPSUB(MW1000* cpu);
bool FPMUL(MW1000* cpu);
bool FPDIV(MW1000* cpu);
bool FPINC(MW1000* cpu);
bool FPDEC(MW1000* cpu);
bool FPNEG(MW1000* cpu);
bool FPSIN(MW1000* cpu);
bool FPCOS(MW1000* cpu);
bool FPTAN(MW1000* cpu);
bool FPASIN(MW1000* cpu);
bool FPACOS(MW1000* cpu);
bool FPATAN(MW1000* cpu);
bool SPSQRT(MW1000* cpu);
bool FPLOG(MW1000* cpu);
bool FPPOW(MW1000* cpu);
bool CONVIF(MW1000* cpu);
bool CONVFI(MW1000* cpu);

bool (*instructions[])(MW1000*) = {
	HLT, INTR, RET, IRET, JMP, JPZ, JNZ, JCZ, JNCZ, CALL, CLZ, CNZ, CPC, CNC, STP,	// Control Instructions
	MRC, MRR, MRM, MMR, IN, OUT, STTS, STTL, STTP,									// Memory Instructions
	ADD, SUB, ADDC, SUBB, MUL, DIV, POW, SHL, SHR, ROTL, ROTR, INC, DEC,			// ALU Instructions
	AND, OR, NOT, XOR, XNOR, NAND, NOR, COMP, LESS, MORE,							// Logic Instructions
	FPADD, FPSUB, FPMUL, FPDIV, FPINC, FPDEC, FPNEG,								// FPU Instructions
	FPSIN, FPCOS, FPTAN, FPASIN, FPACOS, FPATAN, SPSQRT, FPLOG, FPPOW,				// Complex FPU Instructions
	CONVIF, CONVFI																	// Conversions
};

#endif